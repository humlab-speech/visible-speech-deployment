#Port 80 will never be hit while the master-edge-router is being used since it automatically forwards all traffic to port 8081 which goes directly to 443
<VirtualHost *:80>
  ServerName recorder.${HS_DOMAIN_NAME}

  RewriteEngine On
  RewriteCond %{HTTPS} off
  RewriteCond %{REQUEST_URI} !^\/\.well-known\/.*$
  RewriteRule (.*) https://recorder.${HS_DOMAIN_NAME}/$1 [R,L]

</VirtualHost>

<VirtualHost *:443>

  ServerName recorder.${HS_DOMAIN_NAME}

  SSLProtocol All -SSLv2 -SSLv3
  SSLCompression Off
  SSLCipherSuite "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+AESGCM EECDH EDH+AESGCM EDH+aRSA HIGH !MEDIUM !LOW !aNULL !eNULL !L$
  SSLEngine On
  SSLProxyEngine On

  SSLCertificateFile /etc/certs/${HS_DOMAIN_NAME}/cert.crt
  SSLCertificateKeyFile /etc/certs/${HS_DOMAIN_NAME}/cert.key

  #SSLCertificateFile /certs/letsencrypt/live/${HS_DOMAIN_NAME}/fullchain.pem
  #SSLCertificateKeyFile /certs/letsencrypt/live/${HS_DOMAIN_NAME}/privkey.pem

  RequestHeader set X-Forwarded-Proto "https"

  # Use RewriteEngine to handle websocket connection upgrades
  RewriteEngine On
  RewriteCond %{HTTP:Connection} Upgrade [NC]
  RewriteCond %{HTTP:Upgrade} websocket [NC]
  RewriteRule /(.*) ws://wsr-client:80/$1 [P,L] 

  <Location "/">
    # preserve Host header to avoid cross-origin problems
    ProxyPreserveHost on
    # proxy
    ProxyPass         http://wsr-client:80/
    ProxyPassReverse  http://wsr-client:80/
  </Location>

  <Location "/api/">
    # preserve Host header to avoid cross-origin problems
    ProxyPreserveHost on
    # proxy
    ProxyPass         http://wsr-server:9010/
    ProxyPassReverse  http://wsr-server:9010/
  </Location>

  ServerAdmin support@humlab.umu.se

  ErrorLog ${APACHE_LOG_DIR}/recorder-error.log
  CustomLog ${APACHE_LOG_DIR}/recorder-access.log combined

</VirtualHost>

